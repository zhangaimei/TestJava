package cn.bjsxt.io.byte1;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

/**
 * 三、文件拷贝  程序为桥梁
 *  1、建立联系  File对象   源头   目的地
 	2、选择流
              文件输入流  InputStream FileInputStream
              文件输出流  OutputStream  FileInputStream
 	3、操作：byte[]  flush = new byte[1024];  
          int len = 0;
          while(-1!=(len=输入流.read(flush))){
                                         输出流.write(flush,0,len)
           }
                 输出流.flush
 	4、释放资源：关闭（先打开的，后关闭）
 * @author zam
 */
public class CopyFileDemo {
	public static void main(String[] args){
		String src = "C:/Users/嘿嘿 黑/Pictures/Camera Roll/1.png";
		String dest = "E:/JDK/Mycode/ZhangAimei/4.png";
		try {
			FileUtil f = new FileUtil();
			f.copyFile(src,dest);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			System.out.println("文件不存在");
		} catch (IOException e) {
			e.printStackTrace();
			System.out.println("拷贝文件失败|关闭流失败");
		}	
	}
}



Console:将图片1复制到了指定的dest路径并改名为图片4


package cn.bjsxt.io.byte1;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class FileUtil {
	/**
	 * 文件的拷贝(文件夹不存在拷贝)
	 * @param源文件路径
	 * @param目录文件路径
	 * @throws FileNotFoundException, IOException
	 * @return
	 */
	public static void copyFile(String srcPath,String destPath) throws FileNotFoundException, IOException{
		//1、建立联系源（存在且为文件）+目的地（文件可以不存在）
		File src = new File(srcPath);
		File dest = new File(destPath);	//把图片1复制，并改名为100
		copyFile(src,dest);
	}
	/**
	 * 文件的拷贝(文件夹不存在拷贝)
	 * @param源文件File对象
	 * @param目录文件File对象
	 * @throws FileNotFoundException, IOException
	 * @return
	 */
	public static void copyFile(File src,File dest) throws FileNotFoundException, IOException{
		if(! src.isFile()) {	//不是文件或者为null
			System.out.println("只能拷贝文件");
			throw new IOException();
		}
		//2、选择流
		InputStream is = new FileInputStream(src);
		OutputStream os = new FileOutputStream(dest);
		//3、文件拷贝 循环+读取+写出
		byte[] flush = new byte[1024];	//每次读取的字节数组，读1024个字节数。
		int len =0;	//接收长度
		//读取
		while(-1!=(len=is.read(flush)))  {	//循环读取，写成>=0也可以
			//写出
			os.write(flush, 0, len);
		}
		os.flush();	//强制刷出
		//关闭流
		os.close();
		is.close();
	}
}

