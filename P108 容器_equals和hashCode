package cn.bjsxt.collection;
/**
 * 根据属性自动生成hashCode(),equals()
 * @author zam
 *
 */
public class Student {
	private int id;
	private String name;
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + id;	//根据id来生成hashCode，生成的hashCode不至于聚集在一块
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Student other = (Student) obj;
		if (id != other.id)
			return false;
		return true;
	}
}



package cn.bjsxt.collection;
/**
 * equals为true，则hashCode为true
 */
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TestEquals {
	
	public static void main(String[] args) {
		List list = new ArrayList();
		String s1 = new String("aaa");
		String s2 = new String("aaa");
		list.add(s1);
		list.add(s2);
		System.out.println(list.size());
	
		Map map = new HashMap();
		//键不能重复
		map.put(s1, "AAA");
		map.put(s2, "BBB");
		System.out.println(map.get(s1));	//s1,s2虽然是不同对象，但比较是用equals比较内容
	}

}

