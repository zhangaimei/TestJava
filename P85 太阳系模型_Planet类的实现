package cn.bjsxt.solar;

import java.awt.Graphics;
import java.awt.Image;

import cn.bjsxt.util.Constant;
import cn.bjsxt.util.GameUtil;
import cn.bjsxt.util.MyFrame;

/**
 * 太阳系的主窗口
 * @author zam
 *
 */
public class SolarFrame extends MyFrame{
	Image bj = GameUtil.getImage("images/background.jpg");
	Star sun = new Star("images/sun.png",Constant.GAME_HEIGHT/2,Constant.GAME_HEIGHT/2);	//这样太阳就创建出来了
	Planet earth =new Planet("images/earth1.png", 150, 100, 0.1, sun);
		public void paint(Graphics g) {
		g.drawImage(bj, 0, 0, null);
		sun.draw(g);	//把笔传进去画太阳
		earth.draw(g);
	} 
	
	public static void main(String[] args) {
		SolarFrame sf = new SolarFrame();
		sf.launchFrame();
	}
}


package cn.bjsxt.solar;

import java.awt.Graphics;
import java.awt.Image;

import cn.bjsxt.util.GameUtil;

public class Star {
	Image img;	//有图片
	double x,y;	//有坐标
	static int width;	//图片的宽度，高度
	static int height;
	public void draw(Graphics g) {
		g.drawImage(img, (int)x, (int)y, null);
	}
	
	public Star() {
	}
	
	public Star(Image img) {
		this.img =img;
	}
	
	public Star(Image image,double x,double y) {	//重载构造器，输入图片信息
		this(image);
		this.x = x;
		this.y = y;
		this.width = image.getWidth(null);
		this.height = image.getHeight(null);
	}
	
	public Star(String imgpath,double x,double y) {	//重载，这样只需要传路径就可以了
		this(GameUtil.getImage(imgpath),x,y);	//通过this调用另一个构造方法。
		
	}
}



package cn.bjsxt.solar;

import java.awt.Graphics;
import java.awt.Image;

import cn.bjsxt.util.GameUtil;

public class Planet extends Star{
	
	//除了图片，坐标。行星沿着某个椭圆运行：长轴、短轴、速度。绕着某个Star飞
	double longAxis;	//椭圆的长轴
	double shortAxis;	//椭圆的短轴
	double speed;	//飞行的速度
	double degree;	//角度
	Star center;
	
	public void draw(Graphics g) {	
		g.drawImage(img, (int)x, (int)y,  null);
		
		//椭圆轨迹飞行轨迹 
		x = center.x+longAxis*Math.cos(degree);
		y = center.y+shortAxis*Math.sin(degree);
		degree +=speed;
	}
	
	public Planet(String imgpath,double longAxis,double shortAxis,double speed,Star center) {
		super(GameUtil.getImage(imgpath));
		
		this.center = center;
		this.x = center.x +center.width/2+longAxis;	//长轴就是一半的距离
		this.y = center.y+center.height/2 +shortAxis;
		
		this.longAxis = longAxis;
		this.shortAxis = shortAxis;
		this.speed = speed; 
	}
	
	public Planet(Image image, double x, double y,int width,int height) {
		super(image, x, y);
		// TODO Auto-generated constructor stub
	}
	public Planet(String imgpath, double x, double y,int width,int height) {
		super(imgpath, x, y);
	}
}



