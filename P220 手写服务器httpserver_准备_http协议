package cn.bjsxt.server.demo01;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;

/*
 * 创建服务器，并启动
 * 1、请求
 * 2、响应
 */
public class Server2 {
	private ServerSocket server;
	public static final String CRLF="\r\n";	//表示换行
	public static final String BLANK=" ";	//表示空格
	public static void main(String[] args) {
		Server2 server = new Server2();
		server.start();
	}
	/**
	 * 启动方法
	 */
	private void start() {
		try {
			server = new ServerSocket(8888);
			this.receive();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	/**
	 * 接收客户端
	 */
	private void receive() {
		try {
			Socket client = server.accept();
			StringBuilder sb = new StringBuilder();
			String msg = null;	//接收客户端的请求信息
			
			BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));
			
			while((msg=br.readLine()).length()>0) {
				sb.append(msg);
				sb.append("\r\n");
				if(null==msg) {
					break;
				}
			}
			//接收客户端的请求信息
			String requestInfo = sb.toString().trim();	//去除空格
			System.out.println(sb.toString());
			System.out.println(requestInfo);
			
			//响应
			StringBuilder responseContext = new StringBuilder();
			responseContext.append("<html><head><title>HTTP响应示例<title>;"+
					"</head><body>Hello zhangaimei!</body></html>");
		
			StringBuilder response = new StringBuilder();
			//1)HTTP协议版本、状态代码、描述
			response.append("HTTP/1.1").append(BLANK).append("200").append(BLANK).append("OK").append(CRLF);
			//2）响应头（response Head）
			response.append("Server:bjsxt Server/0.0.1").append(CRLF);
			response.append("Date:").append(new Date()).append(CRLF);
			response.append("Content-type:text/plain;charset=GBK").append(CRLF);
			//正文长度：字节长度
			response.append("Content-Length:").append(responseContext.toString().getBytes().length).append(CRLF);
			//3）正文之前
			response.append(CRLF);
			//4)正文
			response.append(responseContext);
			
			//输出流
			BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
			bw.write(response.toString());
			bw.flush();
			bw.close();
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * 停止服务器
	 */
	private void stop() {
		
	}
}



result:(运行程序打开服务器后，在浏览器中输入http://localhost:8888，得到响应)
浏览器中出现：<html><head><title>HTTP响应示例<title>;</head><body>Hello zhangaimei!</body></html>
