package cn.bjsxt.thread.status;

public class JoinDemo01 extends Thread{

	public static void main(String[] args) throws InterruptedException {
		JoinDemo01 demo = new JoinDemo01();
		Thread t = new Thread(demo);	//新生
		t.start();//就绪
		//cpu调度运行
		
		for(int i=0;i<1000;i++) {
			if(50==i) {
				t.join();  //main阻塞。。必须等join……执行完再执行main……
			}
			System.out.println("main…………"+i);
		}
	}

	@Override
	public void run() {
		for(int i=0;i<100;i++) {
			System.out.println("join…………"+i);
		}
	}
}



package cn.bjsxt.thread.status;

public class YieldDemo01 extends Thread{
	public static void main(String[] args) throws InterruptedException {
		YieldDemo01 demo = new YieldDemo01();
		Thread t = new Thread(demo);	//新生
		t.start();//就绪
		//cpu调度运行
		
		for(int i=0;i<1000;i++) {
			if(i%20==0) {
				//暂停本线程main
				Thread.yield(); 
			}
			System.out.println("main…………"+i);
		}
	}
	
	@Override
	public void run() {
		for(int i=0;i<100;i++) {
			System.out.println("join…………"+i);
		}
	}
}


